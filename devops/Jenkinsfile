def projectProperties=[
    parameters([
        choice(name: "VERSION_INCREMENT",
                choices: "none\npatch\nminor\nmajor",
                description: "Version to increment artifact by"),

        booleanParam(name: "DEBUG",
                        description: "Enable verbose console output",
                        defaultValue: false)
    ])
]
properties(projectProperties)

try {

    def APPLICATION_NAME = "serverless"
    def VERSION = "0.0.1"
    def VERSION_INCREMENT = "patch"
    def SERVERLESS_IMAGE = ""

    node(){
        stage("Cleanup"){
            deleteDir()
        }

        stage("Checkout Project"){
            checkout scm
        }

        stage("Load Resources"){
            sh "cp ./scripts/get-release-from-git-and-increment.sh ./tmp/get-release-from-git-and-increment.sh"
            sh "chmod +x ./tmp/get-release-from-git-and-increment.sh"
        }

        stage("Create Tag"){
            sh "./tmp/get-release-from-git-and-increment.sh"
        }

        stage("Build Docker Image"){
            SERVERLESS_IMAGE = docker.build("sls", "-t serverless:${VERSION} -f ./devops/docker-image/Dockerfile .")
            docker.image(SERVERLESS_IMAGE).inside{
                sh "cd ${WORKSPACE} && sudo -H python3.6 -m pip install -r requirements.txt"
            }
        }

        stage("Release Docker Image"){

        }

        stage("Release Tag"){
            sh "./tmp/push-release-to-git.sh"
        }

        stage("Integrate Secrets"){

        }

        stage("Deploy Serverless"){
            docker.image(SERVERLESS_IMAGE).inside{
                sh "sls deploy"
            }
        }
    }

} catch(Exception e){
    throw e
} finally{

}
