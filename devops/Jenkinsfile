try {

    def APPLICATION_NAME = "serverless"
    def VERSION = "0.0.1"
    def VERSION_INC = "patch"
    def SERVERLESS_IMAGE = ""

    pipeline {
    
        parameters{
            choice(
                name: "VERSION_INC",
                choices: 'patch\nminor\nmajor',
                description: "Version update type"
            )
        }

        node{
            
            stage("Cleanup") {
                deleteDir()
            }

            stage("Project Checkout") {
                checkout scm
                
                VERSION_INC = params.VERSION_INC
            }

            stage("Create Tag"){

            }

            stage("Get Secrets") {
                //get google api key from s3 bucket
                //sed into serverless.yml
            }

            stage("Build Docker image"){
                SERVERLESS_IMAGE = docker.build("${APPLICATION_NAME}:${VERSION}", "./devops/docker-image/")
            }

            stage("Release Docker image"){

            }

            stage("Release Tag"){

            }

            stage("Deploy Serverless Instance") {
                docker.image("${SERVERLESS_IMAGE}").inside(){
                    sh "cd $WORKSPACE && pip install -r requirements.txt"
                    sh "sls deploy"
                }
            }
        }
    }
} catch(Exception e){
    throw e
} finally{

}
